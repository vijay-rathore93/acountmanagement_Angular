{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/account/account-service.service\";\nimport * as i3 from \"src/app/services/notification/alerts.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\n\nfunction AddAccountComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \" Account Number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddAccountComponent_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const bank_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", bank_r8.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(bank_r8.name);\n  }\n}\n\nfunction AddAccountComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \" Bank Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddAccountComponent_span_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"IFSC is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddAccountComponent_span_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"Branch code is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddAccountComponent_span_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"Address is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddAccountComponent_span_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵtext(1, \"Total Amount is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AddAccountComponent = /*#__PURE__*/(() => {\n  class AddAccountComponent {\n    constructor(formBuilder, accountService, alertsService, router, activatedRoute) {\n      this.formBuilder = formBuilder;\n      this.accountService = accountService;\n      this.alertsService = alertsService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.isUpdateCustomer = false;\n      this.banks = [{\n        name: 'HDFC',\n        ifscCode: 'HDFCIFSC',\n        branchCode: '001',\n        bankAddress: 'Hdfc Address'\n      }, {\n        name: 'AXIS',\n        ifscCode: 'AXISIFSC',\n        branchCode: '002',\n        bankAddress: 'Axis Address'\n      }, {\n        name: 'SBI',\n        ifscCode: 'SBIIFSC',\n        branchCode: '003',\n        bankAddress: 'Sbi Address'\n      }];\n      this.accountProfileForm = this.formBuilder.group({\n        accountNumber: ['', Validators.required],\n        bankName: ['', Validators.required],\n        ifscCode: ['', Validators.required],\n        branchCode: ['', Validators.required],\n        bankAddress: ['', Validators.required],\n        totalAmount: ['', Validators.required]\n      });\n    }\n\n    ngOnInit() {\n      this.activatedRoute.queryParams.subscribe(params => {\n        const accountId = params['accountId'];\n        const customerId = params['customerId'];\n        console.log(\"account id: \" + accountId);\n\n        if (accountId) {\n          this.isUpdateCustomer = true;\n          this.accountService.getAccount(accountId).subscribe(response => {\n            this.accountProfileForm = this.formBuilder.group({\n              accountId: accountId,\n              accountNumber: [response.accountNumber, Validators.required],\n              bankName: [response.bankName, Validators.required],\n              ifscCode: [response.ifscCode, Validators.required],\n              branchCode: [response.branchCode, Validators.required],\n              bankAddress: [response.bankAddress, Validators.required],\n              totalAmount: [response.totalAmount, Validators.required]\n            });\n            this.customerId = response.customerId;\n          }, error => {\n            this.alertsService.showError(\"error::\", error.error.message);\n          });\n        } else if (customerId) {\n          this.customerId = customerId;\n        }\n      });\n    }\n\n    onSubmit() {\n      this.accountService.createAccount(this.accountProfileForm.value, this.customerId).subscribe(response => {\n        console.log(response);\n        this.router.navigateByUrl('/account');\n      }, error => {\n        this.alertsService.showError(\"error::\", error.error.message);\n      });\n    }\n\n    onChange(deviceValue) {\n      this.accountProfileForm.controls.ifscCode.setValue(this.banks.filter(x => x.name == deviceValue)[0].ifscCode);\n      this.accountProfileForm.value.ifscCode = this.banks.filter(x => x.name == deviceValue)[0].ifscCode;\n      this.accountProfileForm.controls.branchCode.setValue(this.banks.filter(x => x.name == deviceValue)[0].branchCode);\n      this.accountProfileForm.value.branchCode = this.banks.filter(x => x.name == deviceValue)[0].branchCode;\n      this.accountProfileForm.controls.bankAddress.setValue(this.banks.filter(x => x.name == deviceValue)[0].bankAddress);\n      this.accountProfileForm.value.bankAddress = this.banks.filter(x => x.name == deviceValue)[0].bankAddress;\n    }\n\n  }\n\n  AddAccountComponent.ɵfac = function AddAccountComponent_Factory(t) {\n    return new (t || AddAccountComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AccountServiceService), i0.ɵɵdirectiveInject(i3.AlertsService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n\n  AddAccountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddAccountComponent,\n    selectors: [[\"app-add-account\"]],\n    decls: 65,\n    vars: 9,\n    consts: [[1, \"container\"], [1, \"panel\", \"panel-default\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"panel-heading\"], [\"id\", \"editUserId\", 1, \"modal-title\"], [1, \"panel-body\"], [\"id\", \"usersCreateID\", 1, \"row\"], [1, \"col-xs-4\"], [1, \"form-group\"], [1, \"textLabel\"], [2, \"color\", \"red\"], [\"type\", \"text\", \"formControlName\", \"accountNumber\", \"placeholder\", \"Enter Account Number\", \"maxlength\", \"119\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"name\", \"bank\", \"formControlName\", \"bankName\", 1, \"rounded-inputs20\", \"select-select\", \"col-md-3\", 2, \"width\", \"100%\", 3, \"change\"], [\"t\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"formControlName\", \"ifscCode\", \"maxlength\", \"119\", 1, \"form-control\"], [\"for\", \"txtEmailid\", 1, \"textLabel\"], [\"type\", \"text\", \"formControlName\", \"branchCode\", \"maxlength\", \"119\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"bankAddress\", \"maxlength\", \"119\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"totalAmount\", \"placeholder\", \"Enter Amount\", \"maxlength\", \"119\", 1, \"form-control\"], [\"id\", \"userfooterID\", 1, \"panel-footer\"], [\"type\", \"submit\", \"value\", \"Submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-default\", 2, \"float\", \"right\"], [1, \"text-danger\"], [3, \"value\"]],\n    template: function AddAccountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r9 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function AddAccountComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h4\", 4);\n        i0.ɵɵtext(5, \"New Account Registration\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵelementStart(10, \"label\", 9);\n        i0.ɵɵtext(11, \"Account Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 10);\n        i0.ɵɵtext(13, \"*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 11);\n        i0.ɵɵtemplate(15, AddAccountComponent_span_15_Template, 2, 0, \"span\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7);\n        i0.ɵɵelementStart(17, \"div\", 8);\n        i0.ɵɵelementStart(18, \"div\");\n        i0.ɵɵelementStart(19, \"label\", 9);\n        i0.ɵɵtext(20, \"Bank Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"label\", 10);\n        i0.ɵɵtext(22, \"* \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"select\", 13, 14);\n        i0.ɵɵlistener(\"change\", function AddAccountComponent_Template_select_change_23_listener() {\n          i0.ɵɵrestoreView(_r9);\n\n          const _r1 = i0.ɵɵreference(24);\n\n          return ctx.onChange(_r1.value);\n        });\n        i0.ɵɵtemplate(25, AddAccountComponent_option_25_Template, 2, 2, \"option\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, AddAccountComponent_span_26_Template, 2, 0, \"span\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 7);\n        i0.ɵɵelementStart(28, \"div\", 8);\n        i0.ɵɵelementStart(29, \"label\", 9);\n        i0.ɵɵtext(30, \"IFSC Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"label\", 10);\n        i0.ɵɵtext(32, \"* \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 16);\n        i0.ɵɵtemplate(34, AddAccountComponent_span_34_Template, 2, 0, \"span\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 6);\n        i0.ɵɵelementStart(36, \"div\", 7);\n        i0.ɵɵelementStart(37, \"div\", 8);\n        i0.ɵɵelementStart(38, \"label\", 17);\n        i0.ɵɵtext(39, \"Branch Code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"label\", 10);\n        i0.ɵɵtext(41, \"* \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"input\", 18);\n        i0.ɵɵtemplate(43, AddAccountComponent_span_43_Template, 2, 0, \"span\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"div\", 7);\n        i0.ɵɵelementStart(45, \"div\", 8);\n        i0.ɵɵelementStart(46, \"label\", 9);\n        i0.ɵɵtext(47, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"label\", 10);\n        i0.ɵɵtext(49, \"* \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(50, \"input\", 19);\n        i0.ɵɵtemplate(51, AddAccountComponent_span_51_Template, 2, 0, \"span\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 7);\n        i0.ɵɵelementStart(53, \"div\", 8);\n        i0.ɵɵelementStart(54, \"label\", 9);\n        i0.ɵɵtext(55, \"Total Amount\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"label\", 10);\n        i0.ɵɵtext(57, \"* \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(58, \"input\", 20);\n        i0.ɵɵtemplate(59, AddAccountComponent_span_59_Template, 2, 0, \"span\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"div\", 21);\n        i0.ɵɵelementStart(61, \"button\", 22);\n        i0.ɵɵtext(62, \" Create \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"button\", 23);\n        i0.ɵɵtext(64, \" Close \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.accountProfileForm);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.accountProfileForm.controls.accountNumber == null ? null : ctx.accountProfileForm.controls.accountNumber.valid) && ((ctx.accountProfileForm.controls.accountNumber == null ? null : ctx.accountProfileForm.controls.accountNumber.dirty) || (ctx.accountProfileForm.controls.accountNumber == null ? null : ctx.accountProfileForm.controls.accountNumber.touched)));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.banks);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.accountProfileForm.controls.bankName == null ? null : ctx.accountProfileForm.controls.bankName.valid) && ((ctx.accountProfileForm.controls.bankName == null ? null : ctx.accountProfileForm.controls.bankName.dirty) || (ctx.accountProfileForm.controls.bankName == null ? null : ctx.accountProfileForm.controls.bankName.touched)));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.accountProfileForm.controls.ifscCode == null ? null : ctx.accountProfileForm.controls.ifscCode.valid) && ((ctx.accountProfileForm.controls.ifscCode == null ? null : ctx.accountProfileForm.controls.ifscCode.dirty) || (ctx.accountProfileForm.controls.ifscCode == null ? null : ctx.accountProfileForm.controls.ifscCode.touched)));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.accountProfileForm.controls.branchCode == null ? null : ctx.accountProfileForm.controls.branchCode.valid) && ((ctx.accountProfileForm.controls.branchCode == null ? null : ctx.accountProfileForm.controls.branchCode.dirty) || (ctx.accountProfileForm.controls.branchCode == null ? null : ctx.accountProfileForm.controls.branchCode.touched)));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.accountProfileForm.controls.bankAddress == null ? null : ctx.accountProfileForm.controls.bankAddress.valid) && ((ctx.accountProfileForm.controls.bankAddress == null ? null : ctx.accountProfileForm.controls.bankAddress.dirty) || (ctx.accountProfileForm.controls.bankAddress == null ? null : ctx.accountProfileForm.controls.bankAddress.touched)));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.accountProfileForm.controls.totalAmount == null ? null : ctx.accountProfileForm.controls.totalAmount.valid) && ((ctx.accountProfileForm.controls.totalAmount == null ? null : ctx.accountProfileForm.controls.totalAmount.dirty) || (ctx.accountProfileForm.controls.totalAmount == null ? null : ctx.accountProfileForm.controls.totalAmount.touched)));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.accountProfileForm.valid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.MaxLengthValidator, i5.NgIf, i1.SelectControlValueAccessor, i5.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\"\"]\n  });\n  return AddAccountComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}