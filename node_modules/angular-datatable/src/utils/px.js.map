{"version":3,"file":"px.js","sourceRoot":"","sources":["../../../src/utils/px.ts"],"names":[],"mappings":"OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe;AAInD;IAAA;IAoBA,CAAC;IAnBC,kCAAS,GAAT,UAAU,KAAsB,EAAE,IAAc;QAC9C,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC;QACX,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;QACxB,CAAC;IACH,CAAC;IACI,yBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACnB,IAAI,EAAE,IAAI;iBACX,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,6BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,qBAAC;AAAD,CAAC,AApBD,IAoBC","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n\n\nexport class PixelConverter implements PipeTransform {\n  transform(value: string | number, args: string[]): any {\n    if (value === undefined) {\n        return;\n    }\n    if (typeof value === 'string') {\n        return value;\n    }\n    if (typeof value === 'number') {\n        return value + 'px';\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\n  name: 'px'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}