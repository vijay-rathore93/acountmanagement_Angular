{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AccountServiceService = /*#__PURE__*/(() => {\n  class AccountServiceService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    getAccountList() {\n      return this.http.get(environment.basic_url + 'account/all');\n    }\n\n    createAccount(account, customerId) {\n      const headerDict = {\n        'customerId': `${customerId}`,\n        'Content-Type': 'application/json'\n      };\n      const requestOptions = {\n        headers: new HttpHeaders(headerDict)\n      };\n      return this.http.post(environment.basic_url + 'account/', account, requestOptions);\n    }\n\n    deleteAccount(id) {\n      return this.http.delete(environment.basic_url + 'account/', this.getHeader(id));\n    }\n\n    activateAccount(id) {\n      const headerDict = {\n        'accountNumber': `${id}`\n      };\n      const requestOptions = {\n        headers: new HttpHeaders(headerDict)\n      };\n      return this.http.get(environment.basic_url + 'account/activate', requestOptions);\n    }\n\n    deactivateAccount(id) {\n      const headerDict = {\n        'accountNumber': `${id}`\n      };\n      const requestOptions = {\n        headers: new HttpHeaders(headerDict)\n      };\n      return this.http.get(environment.basic_url + 'account/deactivate', requestOptions);\n    }\n\n    getHeader(id) {\n      const headerDict = {\n        'accountId': `${id}`\n      };\n      const requestOptions = {\n        headers: new HttpHeaders(headerDict)\n      };\n      return requestOptions;\n    }\n\n    getAccount(id) {\n      return this.http.get(environment.basic_url + 'account/', this.getHeader(id));\n    }\n\n  }\n\n  AccountServiceService.ɵfac = function AccountServiceService_Factory(t) {\n    return new (t || AccountServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AccountServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountServiceService,\n    factory: AccountServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return AccountServiceService;\n})();","map":null,"metadata":{},"sourceType":"module"}