{"version":3,"file":"column.component.js","sourceRoot":"","sources":["../../../src/components/column.component.ts"],"names":[],"mappings":"OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,YAAY,EAAU,MAAM,eAAe;AAMtE;IAAA;QAIK,aAAQ,GAAG,KAAK,CAAC;QACjB,cAAS,GAAG,KAAK,CAAC;QAQlB,YAAO,GAAG,IAAI,CAAC;QAWR,qBAAgB,GAAG,EAAE,CAAC,CAAC,gBAAgB;IA0CnD,CAAC;IAhDG,sCAAY,GAAZ,UAAa,GAAiB,EAAE,KAAa;QACzC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;YAChC,MAAM,CAAgB,IAAI,CAAC,UAAW,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACvE,CAAC;IACL,CAAC;IAID,kCAAQ,GAAR;QACI,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAEO,wCAAc,GAAtB;QACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpC,EAAE,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;YAChD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;YAC9E,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,gBAAgB,GAAG;gBACpB,GAAC,IAAI,CAAC,UAAU,CAAC,GAAE,IAAI;;aAC1B,CAAC;QACN,CAAC;;IACL,CAAC;IACE,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,mBAAmB;iBAChC,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,8BAAc,GAA2C;QAChE,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC5B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC/B,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9B,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC7B,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,eAAe,EAAG,EAAE,EAAE;QACpE,gBAAgB,EAAE,CAAC,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,iBAAiB,EAAG,EAAE,EAAE;KACvE,CAAC;IACF,sBAAC;AAAD,CAAC,AAlED,IAkEC","sourcesContent":["import { Directive, Input, ContentChild, OnInit } from '@angular/core';\nimport { DataTableRow } from './row.component';\nimport { CellCallback, DataTableSortCallback } from './types';\n\n\n\nexport class DataTableColumn implements OnInit {\n\n    // init:\n     header: string;\n     sortable = false;\n     resizable = false;\n     property: string;\n     styleClass: string;\n     cellColors: CellCallback;\n     customSort: DataTableSortCallback;\n\n    // init and state:\n     width: number | string;\n     visible = true;\n\n     cellTemplate: any;\n     headerTemplate: any;\n\n    getCellColor(row: DataTableRow, index: number) {\n        if (this.cellColors !== undefined) {\n            return (<CellCallback>this.cellColors)(row.item, row, this, index);\n        }\n    }\n\n    private styleClassObject = {}; // for [ngClass]\n\n    ngOnInit() {\n        this._initCellClass();\n    }\n\n    private _initCellClass() {\n        if (!this.styleClass && this.property) {\n            if (/^[a-zA-Z0-9_]+$/.test(this.property)) {\n                this.styleClass = 'column-' + this.property;\n            } else {\n                this.styleClass = 'column-' + this.property.replace(/[^a-zA-Z0-9_]/g, '');\n            }\n        }\n\n        if (this.styleClass != null) {\n            this.styleClassObject = {\n                [this.styleClass]: true\n            };\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: 'data-table-column'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'header': [{ type: Input },],\n'sortable': [{ type: Input },],\n'resizable': [{ type: Input },],\n'property': [{ type: Input },],\n'styleClass': [{ type: Input },],\n'cellColors': [{ type: Input },],\n'customSort': [{ type: Input },],\n'width': [{ type: Input },],\n'visible': [{ type: Input },],\n'cellTemplate': [{ type: ContentChild, args: ['dataTableCell', ] },],\n'headerTemplate': [{ type: ContentChild, args: ['dataTableHeader', ] },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}